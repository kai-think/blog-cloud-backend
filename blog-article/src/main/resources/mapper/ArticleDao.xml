<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xb.blog.article.dao.ArticleDao">
    <resultMap id="BlogListVo" type="com.xb.blog.article.vo.ArticleListVo">
        <result column="tagNameList" property="tagNameList" typeHandler="com.xb.blog.article.config.mybatis.typeHandler.ConvertCommaSeparatedStrToListTypeHandler"/>
    </resultMap>
    <select id="getArticlePreviewById" parameterType="String" resultType="com.xb.blog.article.vo.ArticlePreviewVo">
        SELECT
            a.id,
            a.title,
            a.content,
            IFNULL(a.click_count, 0) clickCount,
            IFNULL(a.like_count, 0) likeCount,
            IFNULL(a.comment_count, 0) commentCount,
            IFNULL(a.collect_count, 0) collectCount,
            u.id authorId,
            u.nick_name authorName,
            a.create_time createTime,
            CASE WHEN l.id IS NOT NULL THEN 1 ELSE 0 END liked,
            CASE WHEN c.id IS NOT NULL THEN 1 ELSE 0 END collected
        FROM
            t_article a
                LEFT JOIN t_user u ON a.author = u.id
                LEFT JOIN t_like l ON l.type = 1 AND a.id = l.obj_id AND l.user_id = #{userId}
                LEFT JOIN t_collect c ON c.article_id = a.id AND c.user_id = #{userId}
        WHERE
            a.status = 1 AND a.id = #{id}
    </select>
    <update id="updateLikeCount">
        update t_article set like_count = COALESCE(like_count, 0) + #{count} where id = #{articleId}
    </update>
    <select id="getLikeCountByArticleId" parameterType="String" resultType="Long">
        select like_count from t_article where id = #{articleId}
    </select>
    <update id="updateCommentCount">
        update t_article set comment_count = COALESCE(comment_count, 0) + #{count} where id = #{articleId}
    </update>
    <select id="getCommentCountByArticleId" parameterType="String" resultType="Long">
        select COALESCE(comment_count, 0) from t_article where id = #{articleId}
    </select>
    <update id="updateClickCount">
        update t_article set click_count = COALESCE(click_count, 0) + #{count} where id = #{articleId}
    </update>
    <update id="updateCollectCount">
        update t_article set collect_count = COALESCE(collect_count, 0) + #{count} where id = #{articleId}
    </update>
    <select id="getCollectCountByArticleId" parameterType="String" resultType="Long">
        select collect_count
        from t_article
        where id = #{articleId}
    </select>
    <resultMap id="BlogDocument" type="com.xb.blog.common.core.pojo.ArticleDocument">
        <result column="tagNameList" property="tagNameList" typeHandler="com.xb.blog.article.config.mybatis.typeHandler.ConvertCommaSeparatedStrToListTypeHandler"/>
    </resultMap>
    <select id="getArticleDocumentByArticleId" resultMap="BlogDocument">
        SELECT a.id,
               a.title,
               a.summary,
               a.pic_id                     picId,
               COALESCE(a.click_count, 0)   clickCount,
               COALESCE(a.like_count, 0)    likeCount,
               COALESCE(a.collect_count, 0) collectCount,
               u.id                         authorId,
               u.nick_name                  authorName,
               a.category_id                categoryId,
               GROUP_CONCAT(t.id)           tagIdList,
               GROUP_CONCAT(t.name)         tagNameList,
               a.create_time                publishTime
        FROM t_article a
                 LEFT JOIN t_user u ON a.author = u.id
                 LEFT JOIN t_article_tag bt ON a.id = bt.article_id AND bt.status = 1
                 LEFT JOIN t_tag t ON bt.tag_id = t.id AND t.status = 1
        WHERE a.status = 1 AND a.id = #{articleId}
    </select>
</mapper>